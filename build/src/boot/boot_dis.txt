
D:/os/dmos/build/src/boot/boot.elf:     file format elf32-i386
D:/os/dmos/build/src/boot/boot.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00007c00

Program Header:
    LOAD off    0x00000000 vaddr 0x00007000 paddr 0x00007000 align 2**12
         filesz 0x00000c27 memsz 0x00000c27 flags r-x
    LOAD off    0x00000dfe vaddr 0x00007dfe paddr 0x00007dfe align 2**12
         filesz 0x00000002 memsz 0x00000002 flags r-x

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000027  00007c00  00007c00  00000c00  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 boot_end      00000002  00007dfe  00007dfe  00000dfe  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000011  00000000  00000000  00000e00  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000020  00000000  00000000  00000e18  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000005b  00000000  00000000  00000e38  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000014  00000000  00000000  00000e93  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000058  00000000  00000000  00000ea7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000ae  00000000  00000000  00000eff  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00007c00 l    d  .text	00000000 .text
00007dfe l    d  boot_end	00000000 boot_end
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    df *ABS*	00000000 CMakeFiles/boot.dir/boot.S.obj
00007c13 l       .text	00000000 read_loader
00007dfe l       boot_end	00000000 boot_sig
00000000 l    df *ABS*	00000000 boot1.c
00007c00 g       .text	00000000 _start
00008c27 g       .text	00000000 __bss_start
00008c27 g       .text	00000000 _edata
00008c28 g       .text	00000000 _end



Disassembly of section .text:

00007c00 <_start>:
 	.text
	.global _start
	# .extern boot_entry
_start:

	mov $0, %ax
    7c00:	b8 00 00             	mov    $0x0,%ax
	mov %ax, %ds
    7c03:	8e d8                	mov    %ax,%ds
	mov %ax, %ss
    7c05:	8e d0                	mov    %ax,%ss
	mov %ax, %es
    7c07:	8e c0                	mov    %ax,%es
	mov %ax, %fs
    7c09:	8e e0                	mov    %ax,%fs
	mov %ax, %gs
    7c0b:	8e e8                	mov    %ax,%gs

	mov $_start, %esp
    7c0d:	66 bc 00 7c 00 00    	mov    $0x7c00,%esp

00007c13 <read_loader>:
	# mov $0xe, %ah
	# mov $'\n', %al
	# int $0x10

read_loader:
	mov $0x8000, %bx	# 读取到的内存地址
    7c13:	bb 00 80             	mov    $0x8000,%bx
	
    mov $0x2, %cx		# ch:磁道号，cl起始扇区号
    7c16:	b9 02 00             	mov    $0x2,%cx
	mov $0x2, %ah		# ah: 0x2读磁盘命令
    7c19:	b4 02                	mov    $0x2,%ah
	mov $64, %al		# al: 读取的扇区数量, 必须小于128，暂设置成32KB
    7c1b:	b0 40                	mov    $0x40,%al
	mov $0x0080, %dx	# dh: 磁头号，dl驱动器号0x80(磁盘1)
    7c1d:	ba 80 00             	mov    $0x80,%dx
	int $0x13
    7c20:	cd 13                	int    $0x13
	jc read_loader
    7c22:	72 ef                	jb     7c13 <read_loader>

	jmp 0x8000
    7c24:	e9 d9 03             	jmp    8000 <boot_sig+0x202>

Disassembly of section boot_end:

00007dfe <boot_sig>:
    7dfe:	55                   	push   %bp
    7dff:	aa                   	stos   %al,%es:(%di)
